1) Загрузите образ node версии 15.14
PS D:\dz\backend-middle-homework> docker pull node:15.14
15.14: Pulling from library/node
Digest: sha256:608bba799613b1ebf754034ae008849ba51e88b23271412427b76d60ae0d0627
Status: Image is up to date for node:15.14
docker.io/library/node:15.14

2) Запустите контейнер с именем first_node из образа node версии 15.14 в фоновом режиме, подключив папку data из текущей директории в /var/first/data контейнера
PS D:\dz\backend-middle-homework> docker run --name first_node -it -d -v D:\dz\backend-middle-homework\data:/var/first/data node:15.14
6434030eb8a722dbd6bf2cb449c7abc7b55893778494735676f42a24123ed212


3) Запустите контейнер с именем second_node из образа node версии 15.14 в фоновом режиме, подключив папку data из текущей директории в /var/second/data контейнера
PS D:\dz\backend-middle-homework> docker run --name second_node -it -d -v D:\dz\backend-middle-homework\data:/var/second/data node:15.14
0286c0fffb26e1e187ee3b1035209920d91efc13f868fd723d3bc69de6780fa1

PS D:\dz\backend-middle-homework> docker ps -a
CONTAINER ID   IMAGE        COMMAND                  CREATED              STATUS              PORTS     NAMES
0286c0fffb26   node:15.14   "docker-entrypoint.s…"   4 seconds ago        Up 3 seconds                  second_node
6434030eb8a7   node:15.14   "docker-entrypoint.s…"   About a minute ago   Up About a minute             first_node


4) Подключитесь к контейнеру first_node с помощью exec и создайте текстовый файл любого содержания в /var/first/data
PS D:\dz\backend-middle-homework> docker exec -it first_node /bin/sh
# ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
# touch /var/first/data/test.txt
# ls /var/first/data
test.txt
# echo "Hello from first_node" > /var/first/data/test.txt
# cat /var/first/data/test.txt
Hello from first_node


5) Добавьте еще один файл в папку data на хостовой машине
Добавил)


6) Подключитесь к контейнеру second_node с помощью exec и получите список файлов в директории /var/second/data, выведете на экран содержимое файлов
PS D:\dz\backend-middle-homework> docker exec -it mynode /bin/sh
Error: No such container: mynode
PS D:\dz\backend-middle-homework> docker exec -it second_node /bin/sh
# ls /var/second/data
test.txt  test2.txt


7) Остановите оба контейнера
PS D:\dz\backend-middle-homework> docker stop first_node second_node
first_node
second_node

PS D:\dz\backend-middle-homework> docker ps -a
CONTAINER ID   IMAGE        COMMAND                  CREATED         STATUS                       PORTS     NAMES
0286c0fffb26   node:15.14   "docker-entrypoint.s…"   5 minutes ago   Exited (137) 8 seconds ago             second_node
6434030eb8a7   node:15.14   "docker-entrypoint.s…"   6 minutes ago   Exited (137) 8 seconds ago             first_node


8) Удалите оба контейнера
PS D:\dz\backend-middle-homework> docker rm -f first_node second_node
first_node
second_node

PS D:\dz\backend-middle-homework> docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES


9) Удалите образ node версии 15.14
PS D:\dz\backend-middle-homework> docker rmi node:15.14
Untagged: node:15.14
Untagged: node@sha256:608bba799613b1ebf754034ae008849ba51e88b23271412427b76d60ae0d0627
Deleted: sha256:3d3f41722daf1a77c34d6eade6676bbffa2d6a2a21095de2ab0c427a5c942fc9
Deleted: sha256:601382991a159cfc5013ad973158f30b7b7a913e8d7e547b3456deab3ad98022
Deleted: sha256:d5db49eecae8c02c9ea3a79f89c43ded9162bac118a0302a7b514d0df82aa112
Deleted: sha256:a2c1973858d0aad3de0927294602b17c8ef9050c30e0f461e0868997a08552a4
Deleted: sha256:a0153172017a08a521a8be971ca4dcb5fbc4b7227642c12bbb2da6265bd66b50
Deleted: sha256:f1123940e954d335d91b52a40fab4f8144f38ff113ade7d65663071d0f06da6f
Deleted: sha256:f1f4fbb0e7e6e0ce2d9eae1e577f9f6df0a719dd874bff00b2d08895c75c297d
Deleted: sha256:1eb455ab6d45fdbbd90fccff791ffa228080c052acf464f8da1b1d78650bd706
Deleted: sha256:1dbe832a694971a925d7d216f49b700c95f402bd72288f9d37eceb1d59dcf72d
Deleted: sha256:2f4ee6a2e1b5dfb9236cd262e788f9d39109242ca27a4aacb583c8af66ec3ff7
